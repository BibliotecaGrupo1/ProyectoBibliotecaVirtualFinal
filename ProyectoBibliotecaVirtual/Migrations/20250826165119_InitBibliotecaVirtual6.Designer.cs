// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBibliotecaVirtual.Context;

#nullable disable

namespace ProyectoBibliotecaVirtual.Migrations
{
    [DbContext(typeof(BSD))]
    [Migration("20250826165119_InitBibliotecaVirtual6")]
    partial class InitBibliotecaVirtual6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoBibliotecaVirtual.Models.Administradores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminContraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLAVE_ADMIN");

                    b.Property<string>("AdminUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIN_ID");

                    b.Property<string>("AdminUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USER_ADMIN");

                    b.Property<int>("Edad")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("ADMIN_EDAD");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_NACIMIENTO");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_REGISTRO");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIN_TAG");

                    b.HasKey("Id");

                    b.ToTable("ADMINISTRADORES");
                });

            modelBuilder.Entity("ProyectoBibliotecaVirtual.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE_AUTOR");

                    b.Property<int>("Año")
                        .HasColumnType("int")
                        .HasColumnName("FECHA_PUBLICACION");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESTADO_LIBRO");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GENERO_LIBRO");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE_LIBRO");

                    b.HasKey("Id");

                    b.ToTable("LIBROS");
                });

            modelBuilder.Entity("ProyectoBibliotecaVirtual.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("APELLIDOS");

                    b.Property<int>("Edad")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("USUARIO_EDAD");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_NACIMIENTO");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE_COMPLETO");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRES");

                    b.HasKey("Id");

                    b.ToTable("USUARIOS");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ProyectoBibliotecaVirtual.Models.SesionUsuario", b =>
                {
                    b.HasBaseType("ProyectoBibliotecaVirtual.Models.Usuario");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLAVE_USUARIO");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("E-MAIL");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_REGISTRO");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE_USUARIO");

                    b.ToTable("SESION_USUARIOS");
                });

            modelBuilder.Entity("ProyectoBibliotecaVirtual.Models.SesionUsuario", b =>
                {
                    b.HasOne("ProyectoBibliotecaVirtual.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("ProyectoBibliotecaVirtual.Models.SesionUsuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
